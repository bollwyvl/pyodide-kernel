name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

env:
  EXPECT_BUILD: |-
    _output/extensions/@jupyterlite/pyodide-kernel-extension/static/pypi/all.json

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Install dependencies
        run: python -m pip install -U pip

      - name: Install Python dependencies
        run: python -m pip install -v -e ".[dev,lint]"

      - name: Install JS dependencies
        run: jlpm --frozen-lockfile

      - name: Lint the JS
        run: jlpm lint:js:check

      - name: Lint the Python
        run: jlpm lint:py:check

      - name: Build the JS extension
        run: jlpm build

      - name: Package the extension
        run: jlpm dist:pypi

      - name: Hash dists
        run: |-
          cd dist
          ls | sort | sha256sum * > SHA256SUMS
          echo "./dist/$(ls *.whl)" > requirements-wheel.txt
          echo "./dist/$(ls *.tar.gz)" > requirements-sdist.txt

      - name: Upload extension packages
        uses: actions/upload-artifact@v3
        with:
          name: jupyterlite-pyodide-kernel-dist-${{ github.run_number }}
          path: dist
          if-no-files-found: error

  test_isolated:
    needs: build
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, windows, macos]
        python-version: ['3.8', '3.11']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          architecture: 'x64'

      - uses: actions/download-artifact@v3
        with:
          path: dist
          name: jupyterlite-pyodide-kernel-dist-${{ github.run_number }}

      # Remove NodeJS, twice to take care of system and locally installed node versions.
      - name: Clean out nodejs
        if: matrix.os != 'windows'
        run: |
          set -eux
          sudo rm -rf $(which node)
          sudo rm -rf $(which node)

      - name: Install Built Package (wheel)
        if: matrix.python-version == '3.11'
        run: |-
          python -m pip install -v -r dist/requirements-wheel.txt

      - name: Install Built Package (sdist)
        if: matrix.python-version == '3.8'
        run: |-
          python -m pip install -v -r dist/requirements-sdist.txt

      - name: Smoke test CLI
        run: |-
          jupyter piplite --version || exit 1
          jupyter piplite --help || exit 1

      - name: Smoke test build
        run: |-
          jupyter lite status
          jupyter lite build
          jupyter lite check
          ls ${{ env.EXPECT_BUILD }} || ${{ env.EXPECT_BUILD }} || exit 1

      - name: Smoke test archive
        run: |-
          jupyter lite archive
